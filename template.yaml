AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 5
    Handler: main
    Runtime: go1.x
    Tracing: Active

Resources:
  AssetsBucket:
    Type: AWS::S3::Bucket
    Properties:
      {}
      # One-step deploy with hardcoded bucket name.
      # Bucket notifications allow you to filter based on prefix (the EventBridge solution does not allow for this)

      # BucketName: wrbhj-cvsde3
      # NotificationConfiguration:
      #   LambdaConfigurations:
      #     - Event: "s3:ObjectCreated:*"
      #       Filter:
      #         S3Key:
      #           Rules:
      #             - Name: suffix
      #               Value: .json
      #       Function: !GetAtt AssetsBucketNotificationLambda.Arn
      #
  TrialBucket:
    Type: AWS::S3::Bucket
    Properties: {}

  TrialBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref TrialBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !GetAtt TrialBucket.Arn
          - Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub "${TrialBucket.Arn}/*"
            Condition:
              StringEquals:
                s3:x-amz-acl: "bucket-owner-full-control"

  Trial:
    Type: AWS::CloudTrail::Trail
    DependsOn:
      - TrialBucketPolicy
    Properties:
      TrailName: "MyTrailName"
      S3BucketName: !Ref TrialBucket
      IsLogging: true
      IsMultiRegionTrail: false
      EventSelectors:
        - IncludeManagementEvents: false
          DataResources:
            - Type: AWS::S3::Object
              Values:
                # Empty prefix (/) is required by the service. Otherwise the CloudFormation will fail
                - !Sub "${AssetsBucket.Arn}/"
      IncludeGlobalServiceEvents: false

  # AssetsBucketNotificationLambda:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     CodeUri: assets-bucket-notification/

  # AssetsBucketNotificationPermission:
  #   Type: AWS::Lambda::Permission
  #   Properties:
  #     Action: lambda:InvokeFunction
  #     FunctionName: !GetAtt AssetsBucketNotificationLambda.Arn
  #     Principal: s3.amazonaws.com
  #     # SourceArn: !Sub "arn:${AWS::Partition}:s3:::wrbhj-cvsde3"
  #     SourceArn: !GetAtt AssetsBucket.Arn

  # S3NotificationsResourceLambda:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     CodeUri: s3-notifications-resource/
  #     Policies:
  #       - Statement:
  #           - Effect: Allow
  #             Action: s3:PutBucketNotification
  #             Resource: !GetAtt AssetsBucket.Arn

  # S3NotificationsResource:
  #   Type: Custom::NotificationsResource
  #   DependsOn:
  #     - AssetsBucketNotificationLambda
  #     - AssetsBucket
  #   Properties:
  #     ServiceToken: !GetAtt S3NotificationsResourceLambda.Arn
  #     Bucket: !Ref AssetsBucket
  #     FunctionArn: !GetAtt AssetsBucketNotificationLambda.Arn
  #     NotificationId: S3ObjectCreatedEvent

  EBBucketNotificationLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: eb-bucket-notification/
      Events:
        EventBridgeEvent:
          Type: EventBridgeRule
          Properties:
            Pattern:
              source:
                - aws.s3
              detail-type:
                - AWS API Call via CloudTrail
              detail:
                eventSource:
                  - s3.amazonaws.com
                eventName:
                  - PutObject
                requestParameters:
                  bucketName:
                    - !Ref AssetsBucket
